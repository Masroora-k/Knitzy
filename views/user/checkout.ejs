<%-include("../../views/partials/user/user-header")%>
<meta name="csrf-token" content="<%= csrfToken %>">

  <link rel="stylesheet" href="/stylesheets/checkout.css">



  <div class="container  mt-4">
    <div class="row">
      <div class=" mt-3 col-lg-6 col-md-12 col-sm-12 mb-4">
        <div class="checkout">
          <h6 class="mb-4" style="color: rgb(150, 148, 147);">Checkout</h6>
          <!-- Shipping Address Form -->
          <div class=" p-2 ">
            <h4 class="mb-3">Shipping Address</h4>
            <div class="list-group address-sec mt-3 ">
              <%if(userAddress){%>
                <%userAddress.address.forEach((address)=>{%>
                  <div class="list-group-item d-flex   addressList" style="flex-direction: column;">
                    <div>
                      <address>

                        <b>Name: </b>
                        <%=address.name%> <br>
                          <b>Address: </b>
                          <%=address.address%> <br>
                            <b>City:</b>
                            <%=address.city%> <br>
                              <b>Landmark:</b>
                              <%=address.landMark%> <br>
                                <b>State:</b>
                                <%=address.state%> <br>
                                  <b>Pincode:</b>
                                  <%=address.pincode%> <br>
                                    <b>Phone:</b>
                                    <%=address.phone%> <br>
                                      <b>Alternate Phone:</b>
                                      <%=address.altPhone%>
                      </address>
                    </div>

                    <div class="d-flex justify-content-end">
                      <button type="submit" class="btn confirm me-2 mb-2" data-address-id="<%=address._id%>" >Deliver to This Address</button>
                      <a href="/editAddressCheckout?id=<%=address._id%>"
                        class="btn btn-outline-warning btn-sm me-2 mb-2">Edit</a>
                      <a href="#" class="btn btn-outline-danger btn-sm mb-2"
                        onclick="confirmDelete('<%=address._id%>')">Delete</a>
                    </div>
                  </div>
                  <%})%>
                    <%}else{%>
                      <div class="list-group-item d-flex justify-content-between align-items-center">
                        No Address
                      </div>
                      <%}%>
            </div>
            <div class="d-flex flex-column flex-md-row justify-content-between mt-4">
              <a href="/addAddressCheckout" class="btn btn-outline-primary mt-3 mb-3 w-100">Add New Address</a>

            </div>

          </div>
        </div>
      </div>


      <div class=" mt-4 col-lg-6 col-md-12 col-sm-12">

        <!-- Order Summary -->
        <div class="checkout">
          <h4 class="mb-3">Order Summary</h4>
          <div class="order-summary mb-3">

            <%cart.forEach(item=>{%>
              <div class="d-flex mb-3"
                style="border: 1px solid rgb(226, 222, 222); padding: 10px; border-radius: 10px;">
                <img src="<%=item.productId.productImage[0]%>" alt="Product Image" class="product-image">
                <div class="ms-3">
                  <h6>
                    <%= item.productId.productName%>
                  </h6>
                  <p>Price: <i class="fa-solid fa-indian-rupee-sign"></i><span
                      style="font-size: 1rem; font-weight: bold;">
                      <%= item.price%>
                    </span></p>
                  <p>Quantity: <span style="font-size: 1rem; font-weight: bold;">
                      <%= item.quantity%>
                    </span></p>
                    <p>Total Price: <span style="font-size: 1rem; font-weight: bold;">
                      <%= item.totalPrice%>
                    </span></p>
                </div>
              </div>
              <%})%>
          </div>

          <p><b>Total Amount:</b> <span><i class="fa-solid fa-indian-rupee-sign"></i>
              <%=totalAmount%>
            </span></p>
            <div class=" payment-page ">
              <div class="row mb-3">
                  <div class="col-md-6">
                      <h6><b>Select Payment Method:</b></h4>
                      <div class="form-check">
                          <input class="form-check-input" type="radio" name="paymentMethod" id="razorpay" value="Razorpay" checked>
                          <label class="form-check-label" for="razorpay">
                              Razorpay
                          </label>
                      </div>

                      <%if(totalAmount <= 1000 && order !== 'Order Not Placed'){%>
                     
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" >
                            <label class="form-check-label" for="cod">
                                Cash on Delivery
                            </label>
                        </div>
                      <%}%>  
                  </div>
              </div>
          <button class="btn btn-primary btn-lg btn-block  " id="proceed-to-payment" type="button">Proceed to Payment</button>
        </div>

      </div>
    </div>
  </div>


  <%-include("../../views/partials/user/user-footer")%>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


  <script>
    let selectedAddressId = null;

    function confirmDelete(addressId){
        Swal.fire({
            icon: 'warning',
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!' 
        }).then((result)=>{
            if(result.isConfirmed){
                window.location.href =  `/deleteAddressCheckout?id=${addressId}`;
            }
        })
    }
document.querySelectorAll('.btn.confirm').forEach(button => {
  button.addEventListener('click', function() {
    selectedAddressId = this.getAttribute('data-address-id');

    document.querySelectorAll('.list-group-item').forEach(item => item.classList.remove('selected-address'));
    this.closest('.list-group-item').classList.add('selected-address');
  });
});

document.getElementById('proceed-to-payment').addEventListener('click', function() {
  if (!selectedAddressId) {
    Swal.fire({
      icon: 'warning',
      title: 'No Address Selected',
      text: 'Please select a shipping address before proceeding to payment.',
    });
  } else {
    const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
    console.log('Selected Payment Method:', selectedPaymentMethod);

    fetch(`/passAddress?addressId=${selectedAddressId}`, {
      method: 'GET', 
      headers: { 'Content-Type': 'application/json' },
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        if (selectedPaymentMethod === 'Razorpay') {
          const totalAmount = '<%= totalAmount %>'; // Pass total amount dynamically from your server
            fetch('/createRazorpayOrder', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ 
                totalAmount: totalAmount ,
                _csrf: document.querySelector('meta[name="csrf-token"]').getAttribute('content') })
            })
            .then(response => response.json())
            .then(orderData => {
              if (orderData.success) {
                initiateRazorpayPayment(orderData.orderId);
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Failed to create Razorpay order.',
                });
              }
            })
            .catch(error => {
              console.error('Error:', error);
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'There was an issue with the payment request.',
              });
            });
        } else {
          // Proceed with COD logic
          window.location.href = `/placeOrder?paymentMethod=COD`;
        }
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message || 'Something went wrong.',
        });
      }
    })
    .catch(error => {
      console.error('Error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'There was an issue with the payment request.',
      });
    });
  }
});

function initiateRazorpayPayment(orderId) {
  const totalAmount = '<%= totalAmount %>'; // Pass total amount dynamically from your server
  const options = {
    key: 'rzp_test_MAimzLa32DUYt6', // Replace with your Razorpay Key
    amount: totalAmount * 100, // Amount in paise
    currency: 'INR',
    name: 'KNITZY',
    description: 'Order Payment',
    order_id: orderId, // Pass order ID to Razorpay
    handler: function (response) {
      console.log('Razorpay Response:', response);
      fetch('/placeOrder?orderId=${orderId}&paymentMethod=Online', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
        orderId: orderId,
        paymentMethod: 'Online',
        _csrf: document.querySelector('meta[name="csrf-token"]').getAttribute('content') // Include CSRF token
      })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {

            const orderId = data.orderId;
            // Redirect to the order success page
            window.location.href = `/orderSuccess?orderId=${orderId}`;
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Order Failed',
              text: data.message || 'There was an error saving your order.',
            });
          }
        })
        .catch(error => {
          console.error('Error saving order:', error);
          Swal.fire({
            icon: 'error',
            title: 'Order Failed',
            text: 'There was an error processing your payment.',
          });
        });
    },
    prefill: {
      name: 'Customer Name', // Fill with actual customer info
      email: 'customer@example.com',
      contact: '1234567890',
    },
    theme: {
      color: '#350228',
    },
    modal: {
      ondismiss: function (){
        fetch(`/handlePaymentFailure?orderId=${orderId}&paymentMethod=Online`,{
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
          
          _csrf: document.querySelector('meta[name="csrf-token"]').getAttribute('content') // Include CSRF token
          })
        })
        .then(response => response.json())
        .then(data => {
          if(data.success){
            Swal.fire({
              icon: 'warning',
              title: 'Payment Failed',
              text: 'Your order was not placed. Payment status is pending.',
            })
            .then(()=>{
              window.location.href = `/orders`;
            });
            
          }else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.messge || 'There was an error handling the payment failure.',
            });
          }
        })
        .catch(error => {
          console.error('Error handling payment failure: ',error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'There was an error processing your request.',
          });
        });
      }
    }
  };

  const rzp1 = new Razorpay(options);
  rzp1.open();
}


  </script>
  
  <style>
    .selected-address {
      border: 2px solid #007bff;
    }
  </style>