<%-include("../../views/partials/user/user-header")%>

  <link rel="stylesheet" href="/stylesheets/cart.css">


  <!-- Cart Section -->
  <section class="mt-4">
    <div class="container-fluid">
      <h6 style="color: rgb(107, 109, 109); font-family: Arial, Helvetica, sans-serif;">Cart</h6>
      <div class="row">
        <!-- Product Cards Section -->


        <div class="col-md-8 ">

          <div class="product-cards-container products-cards">

            <%cart.forEach(item=>{%>

              <div class="product-card mb-3">
                <div class="row g-0 flex-md-row flex-column">
                  <div class="col-md-4 col-12">
                    <img src="<%= item.productId.productImage[0]%>" class="product-card-img img-fluid rounded-start"
                      alt="Product Image">
                  </div>
                  <div class="col-md-8 col-12">
                    <div class="card-body">
                      <h5 class="card-title">
                        <%= item.productId.productName%>
                      </h5>
                      <p class="card-text">
                        <%= item.productId.description%>
                      </p>
                      <% if (item.productId.productOffer && item.productId.productOffer.status==='Active' ) { %>
                        <p class="card-text" style="font-weight: 700;">Offer: <span style="color: green;">
                            <%= item.productId.productOffer.name %> - <%= item.productId.productOffer.discountPercentage
                                %>% off
                          </span></p>
                        <% } %>
                          <p class="card-price"><i class="fa-solid fa-indian-rupee-sign"></i>
                            <%= item.price.toLocaleString('en-IN')%>
                          </p>
                          <p class="card-text"> <b>Stock: </b>
                            <%= item.productId.quantity %>
                          </p>
                          <div class="d-flex align-items-center mb-2">
                            <button class="btn btn-outline-secondary btn-sm me-2 quantity-btn" data-action="decrease"
                              data-id="<%=item.productId._id%>">-</button>
                            <span class="me-2 quantity" data-id="<%= item.productId._id%>"
                              data-stock="<%= item.productId.quantity%>">
                              <%= item.quantity%>
                            </span>
                            <button class="btn btn-outline-secondary btn-sm me-2 quantity-btn" data-action="increase"
                              data-id="<%= item.productId._id%>">+</button>
                          </div>
                          <div class="pt-3 col-md-12 card-buttons">

                            <div class="div">
                              <button class="btn btn-danger btn-sm delete-btn"><i class="fas fa-trash-alt"></i>
                                Remove</button>
                            </div>
                          </div>
                    </div>
                  </div>
                </div>
              </div>

              <%});%>

          </div>

        </div>


        <!-- Price Details Section -->
        <div class="col-md-4 price-section pt-4">
          <div class="card position-fixed-lg">
            <div class="card-body">
              <h5 class="card-title">Price Details</h5>
              <p class="card-text">Price of Items: <span class="float-end"><i
                    class="fa-solid fa-indian-rupee-sign"></i><span
                    id="price-of-items"><%=totalPrice.toLocaleString('en-IN')%> </span></span></p>

              <p class="card-text">Discount: <span class="float-end text-success">- <span id="discount-amount">
                    <%= discount%>
                  </span>%</span></p>

              <%if(totalPrice===0){%>
                <p class="card-text">Delivery Charges: <span class="float-end "><i
                      class="fa-solid fa-indian-rupee-sign"></i>0</span></p>
                <%}else{%>
                  <p class="card-text">Delivery Charges: <span class="float-end "><i
                        class="fa-solid fa-indian-rupee-sign"></i>80</span></p>
                  <%}%>
                    <hr>
                    <%if(totalPrice===0){%>
                      <p class="card-text">Total Amount: <span class="float-end"><i
                            class="fa-solid fa-indian-rupee-sign"></i><span id="total-amount">0</span> </span></p>
                      <%}else{%>
                        <p class="card-text">Total Amount: <span class="float-end"><i
                              class="fa-solid fa-indian-rupee-sign"></i><span
                              id="total-amount"><%=totalAmount.toLocaleString('en-IN') %></span> </span></p>
                        <%}%>

                          <a href="/coupon" class="btn btn-secondary w-50"><i class="fas fa-tag"></i>Available Coupons
                          </a>
                          <div class="d-flex mt-2">
                            <input type="text" class="form-control" name="applyCoupon" id="applyCoupon"
                              placeholder="Enter Coupon Code" value="<%= couponCode%>">
                            <button class="ms-2 btn btn-outline-primary" id="applyCouponButton">Apply</button>
                            <button class="ms-2 btn btn-outline-danger" id="removeCouponButton">Remove</button>
                          </div>
                          <a href="/cart-validate" class="btn btn-primary w-100 mt-3 checkout">Place Order</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script>

    document.addEventListener('DOMContentLoaded', () => {
      // Function to get query parameters
      function getQueryParam(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
      }

      // Check if there's a coupon code in the URL
      const couponCode = getQueryParam('couponCode');
      if (couponCode) {
        document.getElementById('applyCoupon').value = couponCode;
      }



      document.getElementById('applyCouponButton').addEventListener('click', async () => {
        const couponCode = document.getElementById('applyCoupon').value;
        console.log('Coupon code: ', couponCode);
        if (couponCode) {
          try {

            const response = await fetch('/applyCoupon', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ couponCode, userId: '<%= user%>' })
            });

            const data = await response.json();

            if (response.ok) {
              document.getElementById('discount-amount').textContent = data.discount;
              document.getElementById('total-amount').textContent = data.totalAmount.toLocaleString('en-IN');
              Swal.fire({
                position: "top-end",
                icon: "success",
                title: "Coupon applied successfully.",
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                  popup: 'custom-swal-popup',
                  icon: 'custom-swal-icon',
                  title: 'custom-swal-title'
                }
              });

            } else {
              Swal.fire('Error!', data.message, 'error');
            }

          } catch (error) {

            console.error('Error: ', error);
            Swal.fire(
              'Error!',
              'Unable to connect to the server.Please try again.',
              'error'
            );

          }
        }
      })


      document.getElementById('removeCouponButton').addEventListener('click', async () => {
        const couponCode = document.getElementById('applyCoupon').value;
        if (couponCode) {
          try {
            const response = await fetch('/removeCoupon', {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ couponCode, userId: '<%= user %>' })
            });

            const data = await response.json();

            if (response.ok) {
              // Update the total amount on the page
              document.getElementById('total-amount').textContent = data.totalAmount.toLocaleString('en-IN');
              document.getElementById('discount-amount').textContent = '0';

              // Clear the coupon code input field
              document.getElementById('applyCoupon').value = '';

              Swal.fire({
                position: "top-end",
                icon: "success",
                title: "Coupon removed successfully.",
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                  popup: 'custom-swal-popup',
                  icon: 'custom-swal-icon',
                  title: 'custom-swal-title'
                }
              });
            } else {
              Swal.fire('Error!', data.message, 'error');
            }
          } catch (error) {
            console.error('Error:', error);
            Swal.fire(
              'Error!',
              'Unable to connect to the server. Please try again.',
              'error'
            );
          }
        }
      });

      document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', async function () {
          const productId = this.closest('.product-card').querySelector('.quantity').dataset.id; // Get the product ID from the card


          const result = await Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
          });


          if (result.isConfirmed) {
            try {

              const response = await fetch('/cartDelete', {
                method: 'DELETE',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  userId: '<%= user %>',
                  productId: productId
                })
              });

              const data = await response.json();

              if (response.ok) {

                localStorage.setItem('cartItemDeleted', 'true');
                document.getElementById('cart-quantity').textContent = data.cartQuantity;

                location.reload();


              } else {
                Swal.fire(
                  'Error!',
                  'Something went wrong. Please try again.',
                  'error'
                );
              }
            } catch (error) {
              console.error('Error:', error);
              Swal.fire(
                'Error!',
                'Unable to connect to the server. Please try again.',
                'error'
              );
            }
          }
        });
      });





      document.querySelectorAll('.quantity-btn').forEach(button => {
        button.addEventListener('click', async (event) => {
          const action = event.target.dataset.action;
          const productId = event.target.dataset.id;

          try {
            const response = await fetch('/cartUpdate', {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ userId: '<%= user %>', productId, action }) // replace 'user-id-here' with actual user ID
            });

            const result = await response.json();

            if (response.ok) {

              const quantitySpan = document.querySelector(`.quantity[data-id="${productId}"]`);
              const newQuantity = result.cart.items.find(item => item.productId._id.toString() === productId).quantity;
              quantitySpan.textContent = newQuantity;




              document.getElementById('price-of-items').textContent = result.totalPrice;

              document.getElementById('total-amount').textContent = result.totalAmount;

              document.getElementById('discount-amount').textContent = result.discount;

              document.getElementById('cart-quantity').textContent = result.cartQuantity;

            } else {
              Swal.fire(
                'Error!',
                result.message,
                'error'
              );
            }
          } catch (error) {
            console.error('Error:', error);
          }
        });
      });

      document.querySelector('.checkout').addEventListener('click', async (event) => {
  event.preventDefault();

  try {
    // Step 1: Check cart and product quantities
    const response = await fetch('/cart-validate', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const data = await response.json();

    if (response.status === 400) {
      if (data.outOfStockProducts) {
        // Display SweetAlert for out of stock products
        Swal.fire({
          icon: 'error',
          title: 'Out of Stock',
          html: `The following products are out of stock: <b>${data.outOfStockProducts.join(', ')}</b>`,
          confirmButtonText: 'OK'
        });
      }else if (data.quantityExceedsProducts) {
        // Display SweetAlert for quantity exceeding stock
        Swal.fire({
          icon: 'error',
          title: 'Quantity Exceeds Stock',
          html: `The following products have a quantity greater than the available stock: <b>${data.quantityExceedsProducts.join(', ')}</b>`,
          confirmButtonText: 'OK'
        });
      }
    }else if (response.ok) {
      // Redirect to checkout page if the response is successful
      window.location.href = '/checkout';
    }

  } catch (error) {
    console.error('Error: ', error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Unable to proceed to checkout. Please try again.',
      confirmButtonText: 'OK'
    });
  }
});

     
     
    })


  </script>


  <%-include("../../views/partials/user/user-footer")%>