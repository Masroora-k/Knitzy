 <%- include("../../views/partials/admin/admin-header") %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.css">
<style>
  body {
    font-family: 'Arial', sans-serif;
    background-color: #d1cece36; /* Light gray background */
  }
  .content {
    margin-left: 200px;
    padding: 20px;
    width: calc(100% - 200px);
    margin-top: 100px; /* Height of the navbar */
  }
  .card {
    background: #fff;
    border-radius: 5px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    margin: 20px;
    padding: 20px;
  }
  .card h3 {
    margin-top: 0;
  }
.ledger-book{
  background: #fff;
    border-radius: 5px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    margin: 20px;
    padding: 20px;
}
  .chart-container {
    position: relative;
    height: 400px;
    width: 700px;
  }
  .ledger-book {
    margin-top: 20px;
    text-align: center;
  }
  .ledger-book button {
    background: #333;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }
  .ledger-book button:hover {
    background: #555;
  }
</style>

<section>
  <!-- Content -->
  <div class="content">
    <!-- Dashboard Section -->
    <div id="dashboard-content">
      <header class="header">
        <h1>Admin Dashboard</h1>
      </header>

      <div class="container">
        <div class="filters">
            <div id="filter-sales-report">
                <div class="p-3">
                    
        
                    <form id="generateCustSaleReportForm" class="mt-5" method="GET" action="/admin/dashboardGraphs">
                        <div class="row">
                            <div class="form-group col-md-6" id="startDateF" style="display: none;">
                                <label for="startDate">Start Date</label>
                                <input type="date" class="form-control" id="startDate" name="startDate" />
                            </div>
                            <div class="form-group col-md-6" id="endDateF" style="display: none;">
                                <label for="endDate">End Date</label>
                                <input type="date" class="form-control" id="endDate" name="endDate"/>
                            </div>
                        </div>
        
                        <div class="row">
                            <div class="form-group col-md-6" id="monthSelectF" style="display: none;">
                                <label for="monthSelect">Select Month</label>
                                <input type="month" class="form-control" id="monthSelect" name="monthSelect" />
                            </div>
                        </div>
                       
        
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label for="reportType">Select Report Type:</label>
                                <select class="form-control" id="reportType" name="reportType" required>
                                    <option value="Weekly" <%= sReportType === 'Weekly' ? 'selected' : '' %>>Weekly</option>
                                    <option value="Yearly" <%= sReportType === 'Yearly' ? 'selected' : '' %>>Yearly</option>
                                    <option value="Monthly" <%= sReportType === 'Monthly' ? 'selected' : '' %>>Monthly</option>
                                    <option value="Custom" <%= sReportType === 'Custom' ? 'selected' : '' %>>Custom</option>
                                </select>
                            </div>
                        </div>
        
                        <button type="submit" class="btn btn-primary mt-3">Generate  Report</button>
                    </form>
                </div>
            </div>
        </div>

        <div class="dashboard">
          <div class="card col-md-12">
            <h3>Total Sales</h3>
            
            <div class="chart-container">
              <canvas id="totalSalesChart"></canvas>
            </div>
          </div>

          <div class="card col-md-12">
            <h3>Best Selling Products (Top 10)</h3>
            <div class="chart-container">
              <canvas id="bestSellingProductsChart"></canvas>
            </div>
          </div>

          <div class="card col-md-12">
            <h3>Best Selling Categories (Top 10)</h3>
            <div class="chart-container">
              <canvas id="bestSellingCategoriesChart"></canvas>
            </div>
          </div>

          <div class=" ledger-book col-md-12">
            <h3>Generate Ledger Book</h3>
            <button class="btn">Generate</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<%- include("../../views/partials/admin/admin-footer") %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
  const reportTypeSelect = document.getElementById('reportType');
  const startDateField = document.getElementById('startDateF');
  const endDateField = document.getElementById('endDateF');
  const monthSelectField = document.getElementById('monthSelectF');
  const generateReportForm = document.getElementById('generateCustSaleReportForm');
  const totalSalesChartElement = document.getElementById('totalSalesChart');
  const bestSellingProductsChartElement = document.getElementById('bestSellingProductsChart');
  const bestSellingCategoriesChartElement = document.getElementById('bestSellingCategoriesChart');

  let totalSalesChart, bestSellingProductsChart, bestSellingCategoriesChart;

 
  reportTypeSelect.addEventListener('change', (e) => {
    const reportType = e.target.value;

    if (reportType === 'Custom') {
      startDateField.style.display = 'block';
      endDateField.style.display = 'block';
      monthSelectField.style.display = 'none';
    } else if (reportType === 'Monthly') {
      startDateField.style.display = 'none';
      endDateField.style.display = 'none';
      monthSelectField.style.display = 'block';
    } else {
      startDateField.style.display = 'none';
      endDateField.style.display = 'none';
      monthSelectField.style.display = 'none';
    }
  });

 
  reportTypeSelect.dispatchEvent(new Event('change'));

 
  generateReportForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Get the selected report type and date range
    const reportType = reportTypeSelect.value;
    const startDate = document.getElementById('startDate') ? document.getElementById('startDate').value : null;
    const endDate = document.getElementById('endDate') ? document.getElementById('endDate').value : null;
    const monthSelect = document.getElementById('monthSelect') ? document.getElementById('monthSelect').value : null;

    // Fetch new data from the backend
    const response = await fetch(`/admin/dashboardGraphs?reportType=${reportType}&startDate=${startDate}&endDate=${endDate}&monthSelect=${monthSelect}`);
    const data = await response.json();

    // Update the charts with new data
    updateCharts(data);
  });

  // Function to update the charts
  const updateCharts = (data) => {
    // Update total sales chart
    if (totalSalesChart) totalSalesChart.destroy();
    totalSalesChart = new Chart(totalSalesChartElement.getContext('2d'), {
      type: 'bar',
      data: {
        labels: ['Total Sales'],
        datasets: [{
          label: `Total Sales: â‚¹${data.totalSales}`,
          data: [data.totalSales],
          backgroundColor: '#f88502',
            borderColor: '#f88502',
          fill: false
        }]
      }
    });

    // Update best-selling products chart
    if (bestSellingProductsChart) bestSellingProductsChart.destroy();
    bestSellingProductsChart = new Chart(bestSellingProductsChartElement.getContext('2d'), {
      type: 'bar',
      data: {
        labels: data.bestSellingProducts.map(item => item.productName),
        datasets: [{
          label: 'Best Selling Products',
          data: data.bestSellingProducts.map(item => item.totalQuantity),
          backgroundColor: '#1cc88a',
          
        }]
        
      }
    });

    // Update best-selling categories chart
    if (bestSellingCategoriesChart) bestSellingCategoriesChart.destroy();
    bestSellingCategoriesChart = new Chart(bestSellingCategoriesChartElement.getContext('2d'), {
      type: 'bar',
      data: {
        labels: data.bestSellingCategories.map(item => item.categoryName),
        datasets: [{
          label: 'Best Selling Categories',
          data: data.bestSellingCategories.map(item => item.totalQuantity),
          backgroundColor: '#36b9cc'
        }]
      }
    });
  };

  // Initialize charts with data 
  updateCharts({
    totalSales: '<%= JSON.stringify(totalSales) %>',
    bestSellingProducts: '<%= JSON.stringify(bestSellingProducts) %>',
    bestSellingCategories: '<%= JSON.stringify(bestSellingCategories) %>',
  });
});

  </script>
  
  